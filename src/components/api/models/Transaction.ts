/* tslint:disable */
/* eslint-disable */
/**
 * PoenApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Token } from './Token';
import {
    TokenFromJSON,
    TokenFromJSONTyped,
    TokenToJSON,
} from './Token';

/**
 * 
 * @export
 * @interface Transaction
 */
export interface Transaction {
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    id?: number;
    /**
     * 
     * @type {Token}
     * @memberof Transaction
     */
    fromToken?: Token;
    /**
     * 
     * @type {Token}
     * @memberof Transaction
     */
    toToken?: Token;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    paid?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    received?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof Transaction
     */
    timestamp?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof Transaction
     */
    lastKnownValue?: number | null;
}

/**
 * Check if a given object implements the Transaction interface.
 */
export function instanceOfTransaction(value: object): value is Transaction {
    return true;
}

export function TransactionFromJSON(json: any): Transaction {
    return TransactionFromJSONTyped(json, false);
}

export function TransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaction {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fromToken': json['fromToken'] == null ? undefined : TokenFromJSON(json['fromToken']),
        'toToken': json['toToken'] == null ? undefined : TokenFromJSON(json['toToken']),
        'paid': json['paid'] == null ? undefined : json['paid'],
        'received': json['received'] == null ? undefined : json['received'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'lastKnownValue': json['lastKnownValue'] == null ? undefined : json['lastKnownValue'],
    };
}

export function TransactionToJSON(value?: Transaction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'fromToken': TokenToJSON(value['fromToken']),
        'toToken': TokenToJSON(value['toToken']),
        'paid': value['paid'],
        'received': value['received'],
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp'] as any).toISOString()),
        'lastKnownValue': value['lastKnownValue'],
    };
}

